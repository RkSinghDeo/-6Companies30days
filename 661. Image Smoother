class Solution:
    def imageSmoother(self, img: List[List[int]]) -> List[List[int]]:
        Rows, Cols = len(img), len(img[0])
        res = [[0] * Cols for _ in range(Rows)]

        for r in range(Rows):
            for c in range(Cols):
                total, count = img[r][c], 1  # Start with the current cell

                # Manually check each of the 8 neighbors
                if r > 0:  # Up
                    total += img[r - 1][c]
                    count += 1
                if r < Rows - 1:  # Down
                    total += img[r + 1][c]
                    count += 1
                if c > 0:  # Left
                    total += img[r][c - 1]
                    count += 1
                if c < Cols - 1:  # Right
                    total += img[r][c + 1]
                    count += 1
                if r > 0 and c > 0:  # Top-left
                    total += img[r - 1][c - 1]
                    count += 1
                if r > 0 and c < Cols - 1:  # Top-right
                    total += img[r - 1][c + 1]
                    count += 1
                if r < Rows - 1 and c > 0:  # Bottom-left
                    total += img[r + 1][c - 1]
                    count += 1
                if r < Rows - 1 and c < Cols - 1:  # Bottom-right
                    total += img[r + 1][c + 1]
                    count += 1

                # Calculate the smoothed value
                res[r][c] = total // count

        return res

